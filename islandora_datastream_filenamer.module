<?php

/**
 * @file
 * Primary hook implementations.
 */

/**
 * Implements hook_menu().
 */
function islandora_datastream_filenamer_menu() {
  $items['admin/islandora/tools/islandora_datastream_filenamer'] = array(
    'title' => 'Islandora Datastream Filenamer',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('islandora_datastream_filenamer_admin_form'),
    'access arguments' => array('administer site configuration'),
    'file' => 'includes/admin.form.inc',
    'type' => MENU_NORMAL_ITEM,
  );
  return $items;
}

/**
 * Implements hook_token_info().
 */
function islandora_datastream_filenamer_token_info() {
  // Datastream tokens.
  $info['types']['dsfilename'] = array(
    'name' => 'Datastream tokens',
    'description' => t("Tokens for islandora relating to datastreams objects."),
  );
  $info['tokens']['dsfilename']['fileextension'] = array(
    'name' => t("Extension from Datastream's Mimetype"),
    'description' => t("File extension derived from mimetype."),
  );
  $info['tokens']['dsfilename']['id'] = array(
    'name' => t("Datastream's ID"),
    'description' => t('Datastream ID.'),
  );
  $info['tokens']['dsfilename']['ds-label'] = array(
    'name' => t("Datastream's label"),
    'description' => t("Datastream label."),
  );
  // Fedora tokens.  (same as what comes with islandora_pathauto)
  $info['types']['fedora'] = array(
    'name' => 'Fedora object tokens',
    'description' => t('Tokens for islandora relating to fedora objects'),
    'needs-data' => 'fedora',
  );
  $info['tokens']['fedora']['pid'] = array(
    'name' => t('Object PID'),
    'description' => t('Full PID of object in Fedora repository'),
  );
  $info['tokens']['fedora']['label'] = array(
    'name' => t('Object label'),
    'description' => t('Fedora object label'),
  );
  $info['tokens']['fedora']['shortpid'] = array(
    'name' => t('Short PID'),
    'description' => t('Fedora object pid without namespace'),
  );
  $info['tokens']['fedora']['namespace'] = array(
    'name' => t('Namespace'),
    'description' => t('Fedora object namespace'),
  );
  return $info;
}

/**
 * Implements hook_tokens().
 */
function islandora_datastream_filenamer_tokens($type, $tokens, array $data = array(), array $options = array()) {
  if (($type == 'dsfilename' || $type == 'fedora') && !empty($data['datastream'])) {
    $datastream = $data['datastream'];
    $replacements = array();
    foreach ($tokens as $name => $original) {
      if ($name == 'fileextension') {
        $replacements[$original] = islandora_get_extension_for_mimetype($datastream->mimetype);
      }
      if ($datastream) {
        if ($name == 'id') {
          $replacements[$original] = $datastream->id;
        }
        if ($name == 'ds-label') {
          $replacements[$original] = $datastream->label;
        }
        if ($name == 'pid') {
          $replacements[$original] = $datastream->parent->id;
        }
        if ($name == 'shortpid') {
          $temp = explode(':', $datastream->parent->id, 2);
          $replacements[$original] = $temp[1];
        }
        if ($name == 'namespace') {
          $temp = explode(':', $datastream->parent->id, 2);
          $replacements[$original] = $temp[0];
        }
        if ($name == 'label') {
          $replacements[$original] = $datastream->parent->label;
        }
      }
    }
    return $replacements;
  }
  return array();
}

function islandora_datastream_filenamer_create_datastream_filename($datastream) {
  return token_replace(variable_get('islandora_ds_download_filename_pattern'),
    array('datastream'=>$datastream,
      'fedora' => $datastream->parent),
    array('clear' => TRUE)
  );
}
