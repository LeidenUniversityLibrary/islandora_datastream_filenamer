<?php

/**
 * @file
 * Primary hook implementations.
 */

/**
 * Implements hook_menu().
 */
function islandora_datastream_filenamer_menu() {
  $items['admin/islandora/tools/islandora_datastream_filenamer'] = array(
    'title' => 'Islandora Datastream Filenamer',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('islandora_datastream_filenamer_admin_form'),
    'access arguments' => array('administer site configuration'),
    'file' => 'includes/admin.form.inc',
    'type' => MENU_NORMAL_ITEM,
  );
  return $items;
}

/**
 * Implements hook_token_info().
 *
 * Contains the 'fedora' tokens that are part of islandora_pathauto.
 */
function islandora_datastream_filenamer_token_info() {
  return array(
    'types' => array(
      'dsfilename' => array(
        'name' => 'Datastream tokens',
        'description' => t("Tokens for islandora relating to datastreams objects.")
      ),
    ),
    'tokens' => array(
      'dsfilename' => array(
        'fileextension' => array(
          'name' => t("Extension from Datastream's Mimetype"),
          'description' => t("File extension derived from mimetype.")
        ),
        'id' => array(
          'name' => t("Datastream's ID"),
          'description' => t('Datastream ID.')
        ),
        'ds-label' => array(
          'name' => t("Datastream's label"),
          'description' => t("Datastream label.")
        ),
        'pid' => array(
          'name' => t('Fedora object PID'),
          'description' => t('Full PID of object in Fedora repository.')
        ),
        'label' => array(
          'name' => t('Fedora object label'),
          'description' => t('Fedora object label.')
        ),
        'shortpid' => array(
          'name' => t('Fedora short PID'),
          'description' => t('Fedora object pid without namespace.')
        ),
        'namespace' => array(
          'name' => t('Fedora object namespace'),
          'description' => t('Fedora object namespace.')
        ),
      ),
    ),
  );
}

/**
 * Implements hook_tokens().
 */
function islandora_datastream_filenamer_tokens($type, $tokens, array $data = array(), array $options = array()) {
  if ($type == 'dsfilename' && is_object($data['datastream'])) {
    $datastream = $data['datastream'];
    $replacements = array();
    foreach ($tokens as $name => $original) {
      if ($name == 'fileextension') {
        $replacements[$original] = islandora_get_extension_for_mimetype($datastream->mimetype);
      }
      if ($datastream) {
        if ($name == 'id') {
          $replacements[$original] = $datastream->id;
        }
        if ($name == 'ds-label') {
          $replacements[$original] = $datastream->label;
        }
        if ($name == 'pid') {
          $replacements[$original] = $datastream->parent->id;
        }
        if ($name == 'shortpid') {
          $temp = explode(':', $datastream->parent->id, 2);
          $replacements[$original] = $temp[1];
        }
        if ($name == 'namespace') {
          $temp = explode(':', $datastream->parent->id, 2);
          $replacements[$original] = $temp[0];
        }
        if ($name == 'label') {
          $replacements[$original] = $datastream->parent->label;
        }
      }
    }
    return $replacements;
  }
  return array();
}

function islandora_datastream_filenamer_create_datastream_filename($datastream) {
  return token_replace(variable_get('islandora_ds_download_filename_pattern'),
    array('datastream' => $datastream),
    array('clear' => TRUE)
  );
}

